basePath: /api/v1
definitions:
  models.Batch:
    properties:
      end_date:
        type: string
      id:
        type: string
      name:
        type: string
      start_date:
        type: string
      venue:
        $ref: '#/definitions/models.Venue'
      venue_id:
        type: string
    type: object
  models.Role:
    properties:
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: string
      last_name:
        type: string
      roles:
        items:
          $ref: '#/definitions/models.Role'
        type: array
      updated_at:
        type: string
    type: object
  models.Venue:
    properties:
      batches:
        items:
          $ref: '#/definitions/models.Batch'
        type: array
      capacity:
        type: integer
      created_at:
        type: string
      id:
        type: string
      location:
        type: string
      name:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API documentation for the Spodemy multi-sports academy backend.
  title: Spodemy API
  version: "1.0"
paths:
  /roles:
    get:
      description: Get a list of all roles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Role'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List roles
      tags:
      - roles
    post:
      consumes:
      - application/json
      description: Create a new role
      parameters:
      - description: Role object
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a role
      tags:
      - roles
  /roles/{id}:
    delete:
      description: Remove a role by UUID
      parameters:
      - description: Role ID (UUID)
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a role
      tags:
      - roles
    get:
      description: Retrieve a role by UUID
      parameters:
      - description: Role ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a role
      tags:
      - roles
    put:
      consumes:
      - application/json
      description: Modify an existing role
      parameters:
      - description: Role ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Updated role object
        in: body
        name: role
        required: true
        schema:
          $ref: '#/definitions/models.Role'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Role'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a role
      tags:
      - roles
  /users:
    get:
      description: Get a list of all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - users
  /users/{id}:
    delete:
      description: Remove a user by UUID
      parameters:
      - description: User ID (UUID)
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - users
    get:
      description: Retrieve a user by UUID
      parameters:
      - description: User ID (UUID)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a user
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Modify an existing user
      parameters:
      - description: User ID (UUID)
        in: path
        name: id
        required: true
        type: string
      - description: Updated user object
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - users
  /venues:
    get:
      description: Get a list of all venues
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Venue'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: List venues
      tags:
      - venues
    post:
      consumes:
      - application/json
      description: Create a new venue record
      parameters:
      - description: Venue object
        in: body
        name: venue
        required: true
        schema:
          $ref: '#/definitions/models.Venue'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Venue'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create a venue
      tags:
      - venues
  /venues/{id}:
    delete:
      description: Remove a venue by UUID
      parameters:
      - description: 'Venue ID (UUID format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Invalid UUID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Venue not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete a venue
      tags:
      - venues
    get:
      description: Retrieve a venue by its UUID
      parameters:
      - description: 'Venue ID (UUID format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Venue'
        "400":
          description: Invalid UUID format
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Venue not found
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a venue
      tags:
      - venues
    put:
      consumes:
      - application/json
      description: Modify an existing venue
      parameters:
      - description: 'Venue ID (UUID format: xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx)'
        in: path
        name: id
        required: true
        type: string
      - description: Updated venue object
        in: body
        name: venue
        required: true
        schema:
          $ref: '#/definitions/models.Venue'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Venue'
        "400":
          description: Invalid UUID format or request body
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Venue not found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update a venue
      tags:
      - venues
swagger: "2.0"
